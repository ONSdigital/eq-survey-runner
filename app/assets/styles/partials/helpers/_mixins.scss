@mixin rem($property, $values...) {
  $max: length($values);
  $pxValues: "";
  $remValues: "";

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value * 16}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  }

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  }
  #{$property}: $pxValues;
  #{$property}: $remValues;
}

@mixin font-size($sizeValue: 1.6) {
  @include rem(font-size, $sizeValue);
}

@mixin inline-block-hack {
  @if ($responsive == false) {
    *display: inline;
    zoom: 1;
  }
}
// =============================================================================
// String Replace
// =============================================================================
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@mixin clearfix() {
  // no-op
}

@mixin lt-ie10() {
  .lt-ie10 & {
    @content;
  }
}

@mixin lt-ie9() {
  .lt-ie9 & {
    @content;
  }
}

@mixin lt-ie8() {
  .lt-ie8 & {
    @content;
  }
}

@mixin lt-ie7() {
  .lt-ie7 & {
    @content;
  }
}

@mixin fixed() {
  @if ($responsive == false) {
    @content;
  }
}

@mixin icon($name) {
  background: url("/s/img/icons/icons--#{$name}.svg") no-repeat center;
}

// =============================================================================
// Remove nth-Child Padding
// =============================================================================

@mixin nth-element($num,$px) {
  &:nth-child(#{$num}){
    padding-left: $px;
  }
}
