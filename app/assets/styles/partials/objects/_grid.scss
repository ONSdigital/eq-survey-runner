.grid {
  box-sizing: border-box;
  @if $grid-use-letter-spacing-hack {
    letter-spacing: -0.32em;
  }
  @else {
    font-size: 0;
  }

  margin-left: -$grid-gutters;
}

.grid--float {
  letter-spacing: 0;
}

.grid--center {
  text-align: center;
  .grid__col {
    text-align: left;
  }
}

.grid--center-all {
  text-align: center;
}

.grid--reverse {
  direction: rtl;
  .grid__col {
    direction: ltr;
  }
}

.grid--spaced {
  .grid__col {
    margin-bottom: $grid-gutters;
  }
  &.grid--tight {
    .grid__col {
      margin-bottom: $grid-gutters/2;
    }
  }
}

.grid--align-mid {
  .grid__col {
    vertical-align: middle;
  }
}

.grid--stagger-align {
  .grid__col:nth-of-type(1n) {
    text-align: right;
  }
  .grid__col:nth-of-type(2n) {
    text-align: left;
  }
}

.grid--tight {
  margin-left: -$grid-gutters/2;
  .grid__col {
    padding-left: $grid-gutters/2;
  }
}

.grid--gutterless {
  margin-left: 0;
  .grid__col {
    padding-left: 0;
  }
}

.grid--pixelgutter {
  margin-left: 1px;
  .grid__col {
    padding-left: 1px;
    margin-bottom: 1px;
  }
}

.grid--flex {
  flex-wrap: wrap;
  flex-flow: row wrap;
  display: flex;
  .grid__col {
    display: flex;
  }
  &.grid--center {
    justify-content: center;
  }
}

@include bp-suffix(grid--bordered, false) {
  margin-left: 0;
  .grid__col {
    padding-top: 1rem;
    padding-bottom: 1rem;
    border-top: 1px solid $color-borders;
    border-bottom: 1px solid $color-borders;
    flex: 1 1 auto;
    &:first-of-type {
      border-right: 1px solid $color-borders;
      padding-left: 0;
    }
  }
}

.grid__col {
  display: inline-block;
  width: 100%;
  vertical-align: top;
  box-sizing: border-box;
  background-clip: content-box;
  @if $grid-use-letter-spacing-hack {
    letter-spacing: normal;
    word-spacing: normal;
  }
  @else {
    font-size: $base-font-size;
  }

  padding-left: $grid-gutters;
  .grid--float & {
    float: left;
    display: block;
  }
}

@for $column from 1 through $grid-cols {
  $width: percentage($column / $grid-cols);

  @include bp-suffix("col-#{$column}", false) {
    width: $width;
    width: calc(100% / #{$grid-cols / $column});
    .grid--flex & {
      flex: 0 0 $width;
      max-width: $width;
    }
  }

  @include bp-suffix("push-#{$column}", false) {
    position: relative;
    left: $width;
  }

  @include bp-suffix("pull-#{$column}", false) {
    position: relative;
    left: 0 - $width;
  }
}

@include bp-suffix("nopull-", false) {
  left: 0;
}

@include bp-suffix("nopush-", false) {
  left: 0;
}

@mixin grid-debug {
  position: relative;
  &::before {
    position: absolute;
    top: 0;
    right: 0;
    left: $grid-gutters;
    bottom: 0;
    content: "";
    background-clip: content-box;
    background-color: rgba(0, 0, 0, 0.05);
  }
}

@mixin grid-debug-col {
  .grid__col {
    background-clip: content-box;
    background-color: rgba(0, 0, 0, 0.05);
  }
}

.u-debug-grid {
  .grid {
    position: relative;
    &::before {
      position: absolute;
      top: 0;
      right: 0;
      left: $grid-gutters;
      bottom: 0;
      content: "";
      background-clip: content-box;
      background-color: rgba(0, 0, 0, 0.05);
    }
  }
  .grid__col {
    background-color: rgba(0, 0, 0, 0.05);
  }
}

// WIP
.u-grid-overlay {
  $col: 62px;

  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: -$grid-gutters;
  max-width: $grid-max-width;
  margin: 0 auto;
  background-size: 86px;
  background-image: linear-gradient(to left, rgba(255, 0, 0, 0.25), rgba(255, 0, 0, 0.25) $col, transparent $col);
}
