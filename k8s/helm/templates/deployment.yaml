apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ include "chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
      - name: keys
        secret:
          secretName: keys
      - name: secrets
        secret:
          secretName: secrets
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5000
          readinessProbe:
            httpGet:
              path: /status
              port: 5000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: keys
              mountPath: "/keys"
              readOnly: true
            - name: secrets
              mountPath: "/secrets"
              readOnly: true
          env:
            - name: EQ_STORAGE_BACKEND
              value: "datastore"
            - name: EQ_ENABLE_SECURE_SESSION_COOKIE
              value: "False"
            - name: EQ_SECRETS_FILE
              value: /secrets/secrets.yml
            - name: EQ_KEYS_FILE
              value: /keys/keys.yml
            - name: EQ_RABBITMQ_ENABLED
              value: "False"
            - name: EQ_RABBITMQ_HOST
              value: rabbit
            - name: EQ_RABBITMQ_HOST_SECONDARY
              value: rabbit
            - name: EQ_SUBMITTED_RESPONSES_TABLE_NAME
              value: submitted-responses
            - name: EQ_QUESTIONNAIRE_STATE_TABLE_NAME
              value: questionnaire-state
            - name: EQ_SESSION_TABLE_NAME
              value: eq-session
            - name: EQ_USED_JTI_CLAIM_TABLE_NAME
              value: used-jti-claim
            - name: EQ_SUBMISSION_BACKEND
              value: gcs
            - name: GUNICORN_WORKERS
              value: "9"
            - name: AWS_XRAY_SDK_ENABLED
              value: "False"
            - name: EQ_GCS_SUBMISSION_BUCKET_ID
              value: "{{- .Values.submissionBucket }}"
            - name: EQ_REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: runner-config
                  key: redis_host
            - name: EQ_REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: runner-config
                  key: redis_port

