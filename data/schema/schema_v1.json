{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "definitions": {
    "id": {
      "type": "string",
      "description": "Used to identify groups, blocks, questions and answers.",
      "pattern": "^[a-z0-9][a-z0-9\\-]*[a-z0-9]$"
    },
    "q_code": {
      "type": "string",
      "description": "A question code used by downstream systems to identify answers.",
      "pattern": "^[0-9a-z]+$"
    },
    "guidance_content": {
      "description": "Allows customisation of guidance text.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "anyOf": [
          {
            "required": [
              "title"
            ]
          },
          {
            "required": [
              "description"
            ]
          },
          {
            "required": [
              "list"
            ]
          }
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "skip_conditions": {
      "description": "Allows an element to be skipped when a condition has been met. By adding more than one `when` element it will evaluate as an or rule.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "properties": {
        "when": {
          "$ref": "#/definitions/when"
        }
      },
      "required": [
        "when"
      ]
    },
    "when": {
      "type": "array",
      "description": "Configure conditional rules. By adding more than one `condition` element it will evaluate as an and rule.",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "meta": {
            "type": "string",
            "description": "Metadata provided by the calling service. This will vary between surveys."
          },
          "condition": {
            "enum": [
              "equals",
              "not equals",
              "contains",
              "not contains",
              "not set"
            ]
          },
          "value": {
            "type": [
              "string",
              "boolean"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "condition"
        ],
        "oneOf": [
          {
            "required": [
              "id"
            ]
          },
          {
            "required": [
              "meta"
            ]
          }
        ]
      }
    },
    "messages": {
      "type": "object",
      "description": "These messages override the standard error messages.",
      "properties": {
        "MANDATORY_TEXTFIELD": {
          "type": "string"
        },
        "MANDATORY_NUMBER": {
          "type": "string"
        },
        "MANDATORY_TEXTAREA": {
          "type": "string"
        },
        "MANDATORY_RADIO": {
          "type": "string"
        },
        "MANDATORY_CHECKBOX": {
          "type": "string"
        },
        "MANDATORY_DATE": {
          "type": "string"
        },
        "NUMBER_TOO_SMALL": {
          "type": "string"
        },
        "NUMBER_TOO_LARGE": {
          "type": "string"
        },
        "INVALID_NUMBER": {
          "type": "string"
        },
        "INVALID_INTEGER": {
          "type": "string"
        },
        "INVALID_DECIMAL": {
          "type": "string"
        },
        "MAX_LENGTH_EXCEEDED": {
          "type": "string"
        },
        "INVALID_DATE": {
          "type": "string"
        },
        "INVALID_DATE_RANGE": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "routing_rules": {
      "type": "array",
      "description": "Used to direct the journey through a survey (in conjunction with navigation).",
      "items": {
        "type": "object",
        "properties": {
          "goto": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The id of another block in the same group."
              },
              "group": {
                "type": "string",
                "description": "The id of another group. The first block in that group will be routed to."
              },
              "when": {
                "$ref": "#/definitions/when"
              }
            },
            "oneOf": [
              {
                "required": [
                  "id"
                ]
              },
              {
                "required": [
                  "group"
                ]
              }
            ],
            "required": [
              "id"
            ]
          },
          "repeat": {
            "type": "object",
            "properties": {
              "answer_id": {
                "type": "string"
              },
              "goto": {
                "type": "string"
              },
              "type": {
                "enum": [
                  "answer_value",
                  "answer_count",
                  "answer_count_minus_one"
                ]
              }
            },
            "required": [
              "answer_id"
            ]
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "goto"
            ]
          },
          {
            "required": [
              "repeat"
            ]
          }
        ]
      }
    }
  },
  "required": [
    "mime_type",
    "schema_version",
    "data_version",
    "survey_id",
    "title",
    "groups",
    "theme",
    "legal_basis"
  ],
  "properties": {
    "eq_id": {
      "type": "string",
      "description": "Used in combination with the form_type to uniquely identify a questionnaire."
    },
    "form_type": {
      "type": "string",
      "description": "Used in combination with the eq_id to uniquely identify a questionnaire."
    },
    "mime_type": {
      "type": "string"
    },
    "schema_version": {
      "type": "string"
    },
    "data_version": {
      "enum": [
        "0.0.1",
        "0.0.2"
      ]
    },
    "survey_id": {
      "type": "string",
      "description": "The ONS id of the survey derived from the inquiry code already in use for that survey."
    },
    "session_timeout_in_seconds": {
      "description": "The amount of time in seconds before timing out a users session.",
      "type": "integer"
    },
    "session_prompt_in_seconds": {
      "description": "The amount of time in seconds before showing the prompt informing a user of the time to session timeout.",
      "type": "integer"
    },
    "title": {
      "type": "string"
    },
    "description": {
      "type": "string"
    },
    "theme": {
      "type": "string"
    },
    "legal_basis": {
      "enum": [
        "Voluntary",
        "StatisticsOfTradeAct"
      ]
    },
    "variables": {
      "type": "object",
      "properties": {
        "period": {
          "type": "string"
        }
      }
    },
    "navigation": {
      "type": "object",
      "description": "Used in conjunction with routing to take user through a survey. ",
      "properties": {
        "visible": {
          "type": "boolean"
        },
        "sections": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Title for a given id."
              },
              "title_from_answers": {
                "type": "array",
                "description": "Takes a list of answer ids. Title will be generated from answer values concatenated together with spaces."
              },
              "group_order": {
                "type": "array",
                "description": "Order in which groups will be navigated within this section."
              }
            },
            "required": [
              "group_order"
            ],
            "oneOf": [
              {
                "required": [
                  "title"
                ]
              },
              {
                "required": [
                  "title_from_answers"
                ]
              }
            ]
          }
        }
      }
    },
    "messages": {
      "$ref": "#/definitions/messages"
    },
    "groups": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/id"
          },
          "title": {
            "type": "string"
          },
          "hide_in_navigation": {
            "type": "boolean"
          },
          "skip_conditions": {
            "$ref": "#/definitions/skip_conditions"
          },
          "routing_rules": {
            "ref": "#/definitions/routing_rules"
          },
          "blocks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/definitions/id"
                },
                "section_number": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "Questionnaire",
                    "Interstitial",
                    "Introduction",
                    "Summary",
                    "Confirmation"
                  ]
                },
                "primary_content": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/id"
                      },
                      "content": {
                        "$ref": "#/definitions/guidance_content"
                      }
                    }
                  }
                },
                "preview_content": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id"
                    },
                    "content": {
                      "$ref": "#/definitions/guidance_content"
                    }
                  }
                },
                "secondary_content": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/id"
                      },
                      "content": {
                        "$ref": "#/definitions/guidance_content"
                      }
                    }
                  }
                },
                "questions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/id"
                      },
                      "title": {
                        "type": "string"
                      },
                      "number": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "guidance": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "$ref": "#/definitions/guidance_content"
                          }
                        }
                      },
                      "skip_conditions": {
                        "$ref": "#/definitions/skip_conditions"
                      },
                      "type": {
                        "enum": [
                          "General",
                          "DateRange",
                          "RepeatingAnswer",
                          "Relationship"
                        ]
                      },
                      "answers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/definitions/id"
                            },
                            "parent_answer_id": {
                              "type": "string",
                              "description": "The id of an answer which is the parent of this child answer, for example a radio option leading to a text field answer."
                            },
                            "q_code": {
                              "$ref": "#/definitions/q_code"
                            },
                            "label": {
                              "type": "string"
                            },
                            "guidance": {
                              "type": "object",
                              "properties": {
                                "show_guidance": {
                                  "type": "string",
                                  "description": "The text that is used for the 'Show guidance' link."
                                },
                                "hide_guidance": {
                                  "type": "string",
                                  "description": "The text that is used for the 'Hide guidance' link."
                                },
                                "content": {
                                  "$ref": "#/definitions/guidance_content"
                                }
                              }
                            },
                            "description": {
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "Checkbox",
                                "Currency",
                                "Date",
                                "MonthYearDate",
                                "Percentage",
                                "Number",
                                "Radio",
                                "TextArea",
                                "TextField",
                                "Relationship",
                                "Unit"
                              ]
                            },
                            "options": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "q_code": {
                                    "$ref": "#/definitions/q_code"
                                  },
                                  "child_answer_id": {
                                    "type": "string",
                                    "description": "The id of an answer that should be treated as a child of this one, for example a text field answer can be the child of a radio option. The id must be of an answer in this list of answers."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Descriptive text that appears below the option label"
                                  },
                                },
                                "required": [
                                  "label",
                                  "value"
                                ]
                              }
                            },
                            "mandatory": {
                              "type": "boolean"
                            },
                            "max_length": {
                              "type": "integer"
                            },
                            "decimal_places": {
                              "type": "integer",
                              "description": "Number of decimal places allowed"
                            },
                            "alias": {
                              "type": "string",
                              "description": "An alias that can be used when piping this answer."
                            },
                            "max_value": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "Maximum numeric value allowed."
                                },
                                "answer_id": {
                                  "type": "string",
                                  "description": "The id of an answer from which to obtain the max_value"
                                }
                              },
                              "oneOf": [
                                {
                                  "required": [
                                    "value"
                                  ]
                                },
                                {
                                  "required": [
                                    "answer_id"
                                  ]
                                }
                              ]
                            },
                            "min_value": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "Minimum numeric value allowed."
                                },
                                "answer_id": {
                                  "type": "string",
                                  "description": "The id of an answer from which to obtain the min_value"
                                }
                              },
                              "oneOf": [
                                {
                                  "required": [
                                    "value"
                                  ]
                                },
                                {
                                  "required": [
                                    "answer_id"
                                  ]
                                }
                              ]
                            },
                            "unit": {
                              "$ref": "units.json#/unit"
                            },
                            "currency": {
                              "$ref": "currencies.json#/currency"
                            },
                            "validation": {
                              "type": "object",
                              "properties": {
                                "messages": {
                                  "$ref": "#/definitions/messages"
                                }
                              }
                            },
                            "calculated": {
                              "type": "boolean",
                              "description": "Indicates that the answer should be treated as the result of a calculation."
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "type",
                            "mandatory"
                          ]
                        }
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "id",
                      "title",
                      "type",
                      "answers"
                    ]
                  }
                },
                "routing_rules": {
                  "ref": "#/definitions/routing_rules"
                },
                "skip_conditions": {
                  "$ref": "#/definitions/skip_conditions"
                }
              },
              "additionalProperties": false,
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "title",
          "blocks"
        ]
      }
    }
  },
  "additionalProperties": false
}
