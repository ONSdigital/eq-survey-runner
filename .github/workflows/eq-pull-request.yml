name: EQ Pull Request

on: [pull_request]

jobs:
    linting:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [8.x]
                python-version: [3.7.x]

        steps:
            - uses: actions/checkout@v2
            - name: Install Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install Node
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install apt dependencies
              run: sudo apt-get install libsnappy-dev
            - name: Install Pip dependencies
              run: pip install -U pip pipenv==2018.5.18 wheel
            - name: Set up Pipenv
              run: pipenv install --dev --deploy
            - name: Compile application
              run: yarn compile
            - name: Run linting script
              run: pipenv run ./scripts/run_lint.sh

    unit_tests:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [8.x]
                python-version: [3.7.x]

        steps:
            - uses: actions/checkout@v2
            - name: Install Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install Node
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install apt dependencies
              run: sudo apt-get install libsnappy-dev
            - name: Install Pip dependencies
              run: pip install -U pip pipenv==2018.5.18 wheel
            - name: Set up Pipenv
              run: pipenv install --dev --deploy
            - name: Compile application
              run: yarn compile
            - name: Populate application version
              run: printf $(git rev-parse HEAD) > .application-version
            - name: Run unit tests
              run: pipenv run ./scripts/run_tests_unit.sh

    validate_schemas:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            - name: Test English schemas
              run: ./scripts/test_schemas.sh data/en
            - name: Test Welsh schemas
              run: ./scripts/test_schemas.sh data/cy

    build_and_push_Docker_image:
        runs-on: ubuntu-latest

        needs: [linting, unit_tests, validate_schemas]

        strategy:
            matrix:
                node-version: [8.x]

        steps:
            - uses: actions/checkout@v2
            - name: Install Node
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install Node dependencies
              run: yarn
            - name: Populate application version
              run: printf $(git rev-parse HEAD) > .application-version
            - name: Compile application
              run: yarn compile
            - name: Build onsdigital/eq-survey-runner Docker image
              run: docker build -t onsdigital/eq-survey-runner:$TAG -f Dockerfile .
              env:
                  TAG: ${{github.HEAD_REF}}
            - name: Build onsdigital/eq-survey-runner-static Docker image
              run: docker build -t onsdigital/eq-survey-runner-static:$TAG -f Dockerfile.static .
              env:
                  TAG: ${{github.HEAD_REF}}
            - name: Login to DockerHub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Push to onsdigital/eq-survey-runner
              run: docker push onsdigital/eq-survey-runner:$TAG
              env:
                  TAG: ${{github.HEAD_REF}}
            - name: Push to onsdigital/eq-survey-runner-static
              run: docker push onsdigital/eq-survey-runner-static:$TAG
              env:
                  TAG: ${{github.HEAD_REF}}
